#!/bin/bash -eu
#  vim: ts=4 sw=4 ai et
#
#  Lockfile managing code.

bashlock() {
    # Author: Sean Reifschneider <sean+opensource@realgo.com>  
    # Date: Wed Sep 18, 2013  
    # License: 2-Clause BSD
    # Code/Bugs: https://github.com/realgo/bashlock
    #
    # This is a function that implements a lockfile and exclusive access via
    # that file.  It's a bash function that manages the lockfile via a trap
    # and is meant to easily be pulled into code to prevent multiple instances
    # from running at once.
    #
    # Getting Started
    # ---------------
    #
    # Copy the "bashlock" function into your code and then call it with a
    # lockfile name, exit on failure:
    #
    #     bashlock /var/run/${0##*/}.pid || exit 1
    #     [Remainder of script code here]
    #
    # Done!

    [ "$#" -eq 1 ] && BASHLOCKFILE="$1"

    if [ -z "$BASHLOCKFILE" ]; then
        echo 'usage: bashlock [LOCKFILENAME]' 1>&2
        echo '  BASHLOCKFILE environment variable may be used' 1>&2
        return 2
    fi

    echo "$$" >"$BASHLOCKFILE.$$"
    if ! ln "$BASHLOCKFILE.$$" "$BASHLOCKFILE" 2>/dev/null; then
        PID=$(head -1 "$BASHLOCKFILE")
        if [ -z "$PID" ]; then
            rm -f "$BASHLOCKFILE"
        else
            kill -0 "$PID" 2>/dev/null || rm -f "$BASHLOCKFILE"
        fi

        if ! ln "$BASHLOCKFILE.$$" "$BASHLOCKFILE" 2>/dev/null; then
            rm -f "$BASHLOCKFILE.$$"
            return 1
        fi
    fi

    rm -f "$BASHLOCKFILE.$$"
    trap 'rm -f "$BASHLOCKFILE"' EXIT

    return 0
}
