#!/bin/bash
#  vim: ts=3 sw=3 ai noet
#
#  Lockfile managing code.

bashlock() {
   # Author: Sean Reifschneider <sean+opensource@realgo.com>  
   # Date: Wed Sep 18, 2013  
   # License: 2-Clause BSD
   # Code/Bugs: https://github.com/realgo/bashlock
	#
   # This is a function that implements a lockfile and exclusive access via
   # that file.  It's a bash function that manages the lockfile via a trap
   # and is meant to easily be pulled into code to prevent multiple instances
   # from running at once.
   #
   # Getting Started
   # ---------------
   #
   # Copy the "bashlock" function into your code and then call it with a
   # lockfile name, exit on failure:
   #
   #     bashlock /var/run/${0##*/}.pid || exit 1
   #     [Remainder of script code here]
   #
   # Done!

	if [ "$#" -ne 1 ]; then
		echo 'usage: bashlock [LOCKFILENAME]' 1>&2
		return 2
	fi
	LOCKFILE="$1"

	echo "$$" >"$LOCKFILE.$$"
	if ! ln "$LOCKFILE.$$" "$LOCKFILE" 2>/dev/null; then
		PID=$(head -1 "$LOCKFILE")
		if [ -z "$PID" ]; then
			rm -f "$LOCKFILE"
		else
			kill -0 "$PID" 2>/dev/null || rm -f "$LOCKFILE"
		fi

		if ! ln "$LOCKFILE.$$" "$LOCKFILE" 2>/dev/null; then
			rm -f "$LOCKFILE.$$"
			return 1
		fi
	fi

	rm -f "$LOCKFILE.$$"
	trap 'rm -f "$LOCKFILE"' EXIT

	return 0
}
